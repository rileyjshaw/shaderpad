var l=`
attribute vec2 aPosition;
varying vec2 vUv;
void main() {
    vUv = aPosition * 0.5 + 0.5;
    gl_Position = vec4(aPosition, 0.0, 1.0);
}
`,a=class{constructor(e,s=null){this.isInternalCanvas=!1;this.isTouchDevice=!1;this.uniforms=new Map;this.textures=new Map;this.buffer=null;this.program=null;this.eventListeners=new Map;this.frame=0;this.cursorPosition=[.5,.5];this.scrollX=0;this.scrollY=0;this.clickPosition=[.5,.5];this.isMouseDown=!1;this.canvas=s||document.createElement("canvas"),s||(this.isInternalCanvas=!0,document.body.appendChild(this.canvas),this.canvas.style.position="fixed",this.canvas.style.inset="0",this.canvas.style.height="100dvh",this.canvas.style.width="100dvw"),this.gl=this.canvas.getContext("webgl"),this.downloadLink=document.createElement("a"),this.fragmentShaderSrc=e,this.animationFrameId=null,this.resizeObserver=new ResizeObserver(()=>this.resizeCanvas()),this.resizeObserver.observe(this.canvas),this.init(),this.addEventListeners()}init(){let e=l;if(this.program=this.gl.createProgram(),!this.program)throw new Error("Failed to create WebGL program");let s=this.createShader(this.gl.VERTEX_SHADER,e),t=this.createShader(this.gl.FRAGMENT_SHADER,this.fragmentShaderSrc);if(this.gl.attachShader(this.program,s),this.gl.attachShader(this.program,t),this.gl.linkProgram(this.program),this.gl.deleteShader(s),this.gl.deleteShader(t),!this.gl.getProgramParameter(this.program,this.gl.LINK_STATUS))throw console.error("Program link error:",this.gl.getProgramInfoLog(this.program)),this.gl.deleteProgram(this.program),new Error("Failed to link WebGL program");let i=this.gl.getAttribLocation(this.program,"aPosition");this.setupBuffer(i),this.resizeCanvas(),this.gl.useProgram(this.program),this.initializeUniform("uResolution","float",[this.canvas.width,this.canvas.height]),this.initializeUniform("uCursor","float",[...this.cursorPosition,this.scrollX,this.scrollY]),this.initializeUniform("uClick","float",[...this.clickPosition,this.isMouseDown?1:0]),this.initializeUniform("uTime","float",0),this.initializeUniform("uFrame","int",0)}createShader(e,s){let t=this.gl.createShader(e);if(this.gl.shaderSource(t,s),this.gl.compileShader(t),!this.gl.getShaderParameter(t,this.gl.COMPILE_STATUS))throw console.error("Shader compilation failed:",s),console.error(this.gl.getShaderInfoLog(t)),this.gl.deleteShader(t),new Error("Shader compilation failed");return t}setupBuffer(e){let s=new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]);this.buffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,s,this.gl.STATIC_DRAW),this.gl.viewport(0,0,this.canvas.width,this.canvas.height),this.gl.enableVertexAttribArray(e),this.gl.vertexAttribPointer(e,2,this.gl.FLOAT,!1,0,0)}resizeCanvas(){let e=window.devicePixelRatio||1,s=this.canvas.clientWidth*e,t=this.canvas.clientHeight*e,i=getComputedStyle(this.canvas),r=i.width!==`${this.canvas.width}px`&&i.width!=="auto",n=i.height!==`${this.canvas.height}px`&&i.height!=="auto";(!r||!n)&&(this.canvas.style.width=`${this.canvas.clientWidth}px`,this.canvas.style.height=`${this.canvas.clientHeight}px`),(this.canvas.width!==s||this.canvas.height!==t)&&(this.canvas.width=s,this.canvas.height=t,this.gl.viewport(0,0,this.gl.drawingBufferWidth,this.gl.drawingBufferHeight),this.uniforms.has("uResolution")&&this.updateUniforms({uResolution:[this.canvas.width,this.canvas.height]}))}addEventListeners(){let e=(t,i)=>{if(!this.uniforms.has("uCursor"))return;let r=this.canvas.getBoundingClientRect();this.cursorPosition[0]=(t-r.left)/r.width,this.cursorPosition[1]=1-(i-r.top)/r.height,this.updateUniforms({uCursor:[this.cursorPosition[0],this.cursorPosition[1],this.scrollX,this.scrollY]})},s=(t,i,r)=>{if(this.isMouseDown=t,t){let n=this.canvas.getBoundingClientRect(),h=i,o=r;this.clickPosition[0]=(h-n.left)/n.width,this.clickPosition[1]=1-(o-n.top)/n.height}this.updateUniforms({uClick:[this.clickPosition[0],this.clickPosition[1],this.isMouseDown?1:0]})};this.eventListeners.set("mousemove",t=>{let i=t;this.isTouchDevice||e(i.clientX,i.clientY)}),this.eventListeners.set("mousedown",t=>{let i=t;this.isTouchDevice||i.button===0&&(this.isMouseDown=!0,s(!0,i.clientX,i.clientY))}),this.eventListeners.set("mouseup",t=>{let i=t;this.isTouchDevice||i.button===0&&s(!1)}),this.eventListeners.set("wheel",t=>{let i=t;this.scrollX+=i.deltaX*.01,this.scrollY+=i.deltaY*.01,e(i.clientX,i.clientY)}),this.eventListeners.set("touchmove",t=>{let i=t;i.touches.length>0&&e(i.touches[0].clientX,i.touches[0].clientY)}),this.eventListeners.set("touchstart",t=>{let i=t;this.isTouchDevice=!0,i.touches.length>0&&(s(!0,i.touches[0].clientX,i.touches[0].clientY),e(i.touches[0].clientX,i.touches[0].clientY))}),this.eventListeners.set("touchend",t=>{t.touches.length===0&&s(!1)}),this.eventListeners.forEach((t,i)=>{this.canvas.addEventListener(i,t)})}initializeUniform(e,s,t){if(this.uniforms.has(e))throw new Error(`Uniform '${e}' is already initialized.`);if(s!=="float"&&s!=="int")throw new Error(`Invalid uniform type: ${s}. Expected 'float' or 'int'.`);let i=this.gl.getUniformLocation(this.program,e);if(!i){console.debug(`Uniform ${e} not found in fragment shader. Skipping initialization.`);return}if(Array.isArray(t)||(t=[t]),t.length<1||t.length>4)throw new Error(`Invalid uniform value length: ${t.length}. Expected a length between 1 and 4.`);let r=t.length;this.uniforms.set(e,{type:s,length:r,location:i}),this.updateUniforms({[e]:t})}updateUniforms(e){Object.entries(e).forEach(([s,t])=>{if(!this.uniforms.has(s))throw new Error(`Uniform '${s}' is not initialized.`);let i=this.uniforms.get(s);if(Array.isArray(t)||(t=[t]),t.length!==i.length)throw new Error(`Invalid uniform value length: ${t.length}. Expected ${i.length}.`);this.gl[`uniform${i.length}${i.type.charAt(0)}`](i.location,...t)})}step(e){this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.uniforms.has("uTime")&&this.updateUniforms({uTime:e}),this.uniforms.has("uFrame")&&this.updateUniforms({uFrame:this.frame}),++this.frame,this.gl.drawArrays(this.gl.TRIANGLES,0,6)}play(e){let s=t=>{t/=1e3,this.step(t),e&&e(t,this.frame),this.animationFrameId=requestAnimationFrame(s)};this.animationFrameId=requestAnimationFrame(s)}pause(){this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null)}save(e){this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.drawArrays(this.gl.TRIANGLES,0,6);let s=this.canvas.toDataURL();e&&!`${e}`.toLowerCase().endsWith(".png")&&(e=`${e}.png`),this.downloadLink.download=e||"export.png",this.downloadLink.href=s,this.downloadLink.click()}initializeTexture(e,s){if(this.textures.has(e))throw new Error(`Texture '${e}' is already initialized.`);let t=this.gl.createTexture();if(!t)throw new Error("Failed to create texture");let i=this.textures.size;this.gl.activeTexture(this.gl.TEXTURE0+i),this.gl.bindTexture(this.gl.TEXTURE_2D,t),this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL,!0),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR),this.textures.set(e,{texture:t,unitIndex:i}),this.updateTextures({[e]:s});let r=this.gl.getUniformLocation(this.program,e);r&&this.gl.uniform1i(r,i)}updateTextures(e){Object.entries(e).forEach(([s,t])=>{let i=this.textures.get(s);if(!i)throw new Error(`Texture '${s}' is not initialized.`);this.gl.activeTexture(this.gl.TEXTURE0+i.unitIndex),this.gl.bindTexture(this.gl.TEXTURE_2D,i.texture),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,t)})}destroy(){this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null),this.resizeObserver.unobserve(this.canvas),this.eventListeners.forEach((e,s)=>{this.canvas.removeEventListener(s,e)}),this.program&&this.gl.deleteProgram(this.program),this.textures.forEach(e=>{this.gl.deleteTexture(e.texture)}),this.buffer&&(this.gl.deleteBuffer(this.buffer),this.buffer=null),this.isInternalCanvas&&this.canvas.remove()}},g=a;export{g as default};
//# sourceMappingURL=index.mjs.map